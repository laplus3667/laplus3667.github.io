[{"categories":["可信任的AI"],"content":"拉普拉斯差分隱私機制的四個面向  紫式晦澀每日一篇文章第3天\n  前言   今天是2022年的第一天! 今天思考了許多關於差分隱私相關的問題. 今天針對最經典的差分隱私機制,「拉普拉斯差分隱私機制」, 來做文章思考.\n  今天的素材是Cynthia Dwork與Aaron Roth的The Algorithmic Foundations of Differential Privacy 的章節3.3, 以及維基百科關於Additive noise mechanism 的條目.\n  場景: 數據庫查詢  數據庫查詢: 問題起源於「數據庫查詢(Database queries)」: 當我們查詢數據庫, 獲得數值資料時, 算法會將數據庫映射為k個實數回傳. 這個映射寫作$$f:\\text{數據庫}\\mapsto \\text{k個實數}.$$\n  敏感性: 我們能多準確地完成這樣的查詢呢? 利用「敏感性」來妙術最壞情況下, 一個人的數據可以改變「查詢映射f」的程度。   不確定性之必要: 萬一上述的敏感性很劇烈, 那麼惡意攻擊者就可以透過比較查詢結果, 來回推特定用戶的特定數據. 為了避免特定用戶的特定數據被還原出來, 增加不確定性是必要的.\n  直觀: 一個「查詢映射f」的靈敏度, 給出了我們必須對其輸出進行多大的擾動, 才能保護隱私, 的上限。 (The sensitivity of a function gives an upper bound on how much we must perturb its output to preserve privacy. )\n  方案: 增加拉普拉斯分佈為不確定性  拉普拉斯分佈: 拉普拉斯分布是指數分布的一個對稱版本。   拉普拉斯機制: 拉普拉斯機制將簡單地計算「查詢映射f」，並用來自拉普拉斯分布的噪聲來擾動每個坐標。 微調噪聲的規模將被校准為「查詢映射f的敏感性」（除以ε）。   拉普拉斯機制的隱私性質: 拉普拉斯機制保留了(ε,0)微分隱私。 處理前與處理後, 兩個查詢結果出現的機率, 不會差太多.\n  實例: 具體數據庫查詢任務  與機器學習的關係？\n  計算查詢: (Counting queries) 在數據庫中，有多少元素滿足特定\n  直方圖查詢: (Histogram queries) 將資料可能分佈的空間分割為單元格，查詢每個單元格中有多少數據庫元素\n  姓氏查詢: 從10,000個潛在名字的列表中計算出哪些名字在2010年人口普查的參與者中最常見. 是一種直方圖查詢.\n  差分隱私選取: (Differential private selection) 結果的空間是離散的，任務是產生一個 \u0026ldquo;最佳 \u0026ldquo;答案，在這種情況下，就是人口最多的直方圖單元。\n  最常見的病症: 在一組受訪者的醫療史中，哪種病症（大約）是最常見的，所以這組問題是，對於所考慮的每種病症，個人是否曾經接受過這種病症的診斷。\n  推廣: 加性噪音機制  推廣定義: 從預先確定的分布中, 添加受控的噪聲, 是設定「差分隱私機制」的一種方式。這種技術對於設計敏感數據上的實值函數的隱私機制很有用。常用於添加噪聲的分布包括拉普拉斯和高斯分布。\n  推廣敏感性: 令$\\mathcal{D}$為資料集; $f:\\mathcal{D} \\mapsto \\mathbb{R}$ 為查詢映射。則查詢映射的敏感性$\\Delta f$定義為 $$ \\Delta f = \\max |f(x)-f(y)|. $$ 這裡的最大值是在$\\mathcal{D}$中, 只差一個元素的一對資料集$x$和$y$。對於維度高的查詢映射函數, 通常在$\\ell_{1}$或$\\ell_{2}$下測量敏感性。\n  論證差分隱私性: 要論證該機制滿足$\\epsilon$差分隱私，需證明「輸出分布」在乘法意義上是封閉的。技巧是利用分佈本身的似然比.\n  後記  到此我們走完了一趟拉普拉斯機制相關的的基礎細節. 基本上, 問題的場景是對數據庫的各種查詢. 如果給準確的數值, 那惡意攻擊者有可能透過查詢結果來回推特定個體的某些數值. 因此, 根據查詢的特性本身針對資料變動的「敏感度」, 設計回傳的數值額外加上的不確定性, 就可以防止這類的惡意攻擊. 其中要量化隱私保護的程度, 就會用到拉普拉斯分佈的各種性質; 也不難想像「充分統計量」對應著「查詢映射」, 而「隱私保護查詢結果」對應著「不確定性部分的集中不等式」.\n  十分有趣, 而這類的工作在2021已經被延伸到各種機器學習模型的訓練上, 造成很多機器學習任務表現被影響甚巨. 因此, 藉由做「模型審計」相關的研究, 來評估「基於隱私保護資料所訓練的機器學習模型」, 是一個基礎必須做的工作. 合成數據, 在這個分野上, 是有什麼樣的直覺可以解決這個問題呢?\n  2022.01.01. 紫蕊 於 西拉法葉, 印第安納, 美國.\n","date":"2022-01-01","img":"","permalink":"https://laplus3667.github.io/zh-tw/posts/mur003%E6%8B%89%E6%99%AE%E6%8B%89%E6%96%AF%E5%B7%AE%E5%88%86%E9%9A%B1%E7%A7%81%E6%A9%9F%E5%88%B6/","series":["每日文章"],"tags":["差分隱私"],"title":"MUR003 拉普拉斯差分隱私機制的四個面向"},{"categories":["日本"],"content":"關於大晦日的五個知識點  紫式晦澀每日一篇文章第2天\n    今天是2021年的最後一天! 今天在Hololive六期生的出道後看了許多的vtuber. 其中日本文化裡一年的最後一天為「大晦日」. 一開始以為是悔改的意思, 但搜集資料後發現故事還不少, 很有意思.\n  今天的素材是在google上面搜尋「大晦日」, 將閱讀文章摘要三點累積而成. 共讀了5個文章, 總結出十五條細節. 下面總結出關於大晦日的五個知識點.\n  年末說法: 大晦日(おおみそか)，指的是每年新曆的12月31日。另外, 表達最後一天的日語還有「年末」和「年の暮れ(としのくれ)」。其中「末(matsu)」和「暮れ(kure)」表示「～的最後」的意思，所以兩者都表示「年末」、「1年的結束」。   神社文化: 神社在大晦日將舉行「大祓い」儀式，以淨化積累了一年的穢物。佛教則為了清除迷惑身心的108個煩惱，將敲響除夜（除夕夜）之鐘。人類有108個煩惱，每敲一次鐘就能消除一個煩惱，所以才敲響108次鐘。   晦日緣由: 在舊曆的晦日代表「每月的最後一天」，而一年的最後一天，也就是一年最後一個月的最後一天稱之為「大晦日」。「晦日」可追溯回中國，《公羊傳》中就有出現過「何以不日？晦日也。」的記載. 其中晦日指的是農曆中每月最後一日，當天幾乎看不到月亮. 晉代杜預對《左傳》的注釋就提到，「晦，月終，陰之盡。」在日本，晦字也有「月隠り（つきごもり）」之意，而「つごもり」正是日文「晦日」的其中一個讀法。 日文「晦日」的另一個讀法「みそか」，就是古文中「30日」的讀法〈如20日的讀音是はつか〉，而由於農曆月終不是29就是30，所以兩者稱呼都是「みそか」。  年神文化: 12月31日是日本人為了在「正月」迎接神靈, 而做各種準備的日子。在「正月」，日本人要迎接一年到頭守護家庭的神靈－「年神様」（年神，歲神），因此正月也是歡迎神靈之日。其中, 會於家門使用神靈休憩的靈木－「松」製作的松飾「門松」，立在家門左右。門松，還擔當著神靈的引路標誌。另外, 在玄關的門上面。還會裝飾「注連繩」，以迎接神靈。在神棚（かみだな：室內供奉神靈的架子），要上供「鏡餅」。   初夢文化: 初夢（はつゆめ）是「新年最初所作的夢」. 一般指在1月1日或1月2日夜晚所作的夢. 傳統日本人認為初夢可以用來占卜新的一年運勢. 特別的, 如果夢到了1.富士山（ふじさん）2.鷹（たか）3.茄子（なす）, 是非常吉利的象徵. ① 這三樣都是德川家康喜歡的東西 ② 富士山是日本第一的山、老鷹是最威猛的鳥類、茄子則是重貴的食物（容易腐壞不易保存 ) ③ 富士山是「無事（ぶじ）」的諧音、老鷹是「高（たかい）」的諧音、茄子是「事事順遂（事をなす）」的諧音.  今天是2021年的最後一天. 回顧過去一年成就許多, 也意識到自己更多的不足. 持續思考, 精進自己, 用輸出指導輸入, 用文章精煉思考. 新的一年, 持續學習語言, 程式, 做更落地的研究, 思考商業, 組織執行項目, 承擔更大的責任, 做一個大寫的人.\n  2021.12.31. 紫蕊 於 西拉法葉, 印第安納, 美國.\n","date":"2021-12-31","img":"","permalink":"https://laplus3667.github.io/zh-tw/posts/mur002%E9%97%9C%E6%96%BC%E5%A4%A7%E6%99%A6%E6%97%A5%E7%9A%84%E4%BA%94%E5%80%8B%E7%9F%A5%E8%AD%98%E9%BB%9E/","series":["每日文章"],"tags":[],"title":"MUR002 關於大晦日的五個知識點"},{"categories":["寫作"],"content":"每日寫文章的五個心法  紫式晦澀每日一篇文章第1天\n    新年新希望! 每天寫文章來增強自己的表達能力. 現在使用Obsidian與ipad可以很輕鬆收集素材; 接著使用github page來發表每日的文章.\n  今天素材收集是在google上面搜尋「每日寫文章」以後, 照讀到的文章總結出三個面相. 共讀了5個文章, 總結出十五條細節. 這個流程蠻不錯, 之後可以參考, 做淺淺的研究. (跟仔細讀paper的方法不同)\n  固定習慣: 目前的設定是每天晚上十點, 在床邊的書桌寫作. 在十一點左右將文章Po到網站上. 有想過可以將素材收集到臉書的粉絲專頁, 用mac系統的quick note等等. 晚上整理, 輸出, 成為以後寫書的材料.\n  格式魔法: 在開頭寫「紫式晦澀每日一篇文章第X天」, 蒐集要寫的素材所屬於的領域, 以及維持書寫輸出的自律習慣. 這個點很不錯, 讓努力能夠累積, 也有足夠的素材能夠當作更高級的文件的底料.\n  刻意輸入: 不要完美主義, 先完成30分的作品. 之後根據需求, 再把文件完善, 讓分數提高. 在消費媒體時, 也持續打字寫下想法, 這樣就有底稿, 可以執行模塊輸出. 利用「溝通黃金圈」或者「清單體」等等的寫作架構, 就可以文思泉湧, 讓思想具現化.\n  碎片分享: 文件都是改出來的. 當我們消費各種知識, 寫作能夠提升我們總結的能力. 這個過程稱為「知識生產」，而生產出來的產物則是「知識卡片」等等碎片化的知識(知識=資訊+脈絡+流程). 利用總結技巧, 模板化輸出, 是什麼為什麼怎麼做. 將成果天天分享於社群帳號; 累積夠多素材後還能整理成大的文章, 標準化寫作. 用粉絲專業寫平時靈感. 用專業帳號發個人品牌文章.\n  定性心流: 把寫文章步驟化, 例如: 關鍵字，架構，內文，插圖，制式內容，校正，內容說明，摘要，發文. 共九個步驟. 寫的時候不要回頭檢查文章, 只在校正的步驟做檢查重排; 當真的寫不出來, 就抽離, 做其他事情, 一但有了靈感就再繼續, 不要免強.\n  即將邁入三十歲, 感覺要從知識的消費者轉為生產者! 分享其實也是在為未來的自己做知識服務. 寫下來的東西對自己最有用. 文章的再修改也能讓未來的自己看見知識如何逐漸形成. 共勉之!\n  2021.12.30. 紫蕊 於 西拉法葉, 印第安納, 美國.\n","date":"2021-12-30","img":"","permalink":"https://laplus3667.github.io/zh-tw/posts/mur001%E6%AF%8F%E6%97%A5%E5%AF%AB%E6%96%87%E7%AB%A0%E7%9A%84%E4%BA%94%E5%80%8B%E5%BF%83%E6%B3%95/","series":["每日文章"],"tags":[],"title":"MUR001 每日寫文章的五個心法"},{"categories":["寫作"],"content":"","date":"2021-12-28","img":"","permalink":"https://laplus3667.github.io/zh-tw/posts/rdd001-%E7%A0%94%E7%A9%B6%E8%A8%AD%E8%A8%88%E7%B3%BB%E5%88%97%E5%B0%8E%E6%96%87/","series":["研究設計"],"tags":[],"title":"RDD001 研究設計系列導文"},{"categories":["寫作"],"content":"211223 思考豆腐塊文章的執行面  目的: 藉由寫豆腐塊文章來強化輸出. 讀者: 放在自己的blog上面. 原則: 一篇文章只講一個觀點. 這個觀點, 快的話應該是要從讀的東西輸出 執行: 理想上, 在製作[[AGM331 知識卡片 (Knowledge Card)]]的同時, 就可以加工成[[豆腐塊作文]], 發到網站上, 整理思想.\n目的: 藉由寫豆腐塊文章來強化輸出. 讀者: 放在自己的blog上面. 原則: 一篇文章只講一個觀點. 這個觀點, 快的話應該是要從讀的東西輸出 執行: 理想上, 在製作[[AGM331 知識卡片 (Knowledge Card)]]的同時, 就可以加工成[[豆腐塊作文]], 發到網站上, 整理思想.\n把部落格當作平常練手的豆腐塊區域 練技術, 要實際寫程式練手 練寫作, 用各種豆腐塊練手\n豆腐塊: 簡述一篇學術文章的每個第一段; 給個Profile 這個Profile應該是各種觀點, 與各種術語.\n 可以練手, 用Fintech 與 Synthetic Data的交集來看.\n  Example : Fintech 與 Synthetic Data的交集.  MDPI   關於「備忘」與「筆記」 我現在意識到, 要有意地去改變寫「備忘」與「筆記」的比例; 「備忘」是讀了一些東西的觀後感, 小總結; 「筆記」則是什麼都不看, 環繞自己某個問題寫. 前者要重視轉化「外在文本」為「自身知識儲備」, 後者要重視轉化「自身知識儲備」為「具體問題的解決過程」. 所以在網站上, 只能放「筆記」 在個人知識庫裡, 主要放「備忘」\n","date":"2021-12-23","img":"","permalink":"https://laplus3667.github.io/zh-tw/posts/art478-%E8%B1%86%E8%85%90%E5%A1%8A%E6%96%87%E7%AB%A0%E6%80%9D%E8%80%83/","series":["豆腐塊"],"tags":[],"title":"ART478 思考豆腐塊文章的執行面"},{"categories":[],"content":"這是第一篇文章\n思考一: 實踐寫作套路, 學習寫作工作總結   想要研究寫作的套路，早上看了一些關於文案寫作的書。但他們的性質跟我們平常知識生產的模式不太一樣。 在網路上寫部落格的原因是什麼? 我想是經營個人品牌。因為我自己都還沒有個人網站。 那為什麼要建立個人品牌呢因為在現在這個時代我們找工作的履歷不再只是一張紙, 而是一個網站可以表現我們過去幾年的工作。 這個有點像在寫工作總結，那怎麼寫好工作總結呢？我覺得這就是可以看得到App上面的課程。  流程圖原始碼  1graph LR 2\tT(實踐寫作套路); A(發表網路部落格); R(建立個人品牌); Act(強化工作總結技能) 3\tT--\u0026gt;A--\u0026gt;R--\u0026gt;Act 思考二: 邏輯流 邏輯流治天下\n","date":"2021-12-21","img":"","permalink":"https://laplus3667.github.io/zh-tw/posts/art001-guidance/","series":[],"tags":["邏輯流"],"title":"ART001 文章概覽"},{"categories":null,"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/yuin/goldmark  https://github.com/alecthomas/chroma  https://github.com/muesli/smartcrop  https://github.com/spf13/cobra  https://github.com/spf13/viper   Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub .\n","date":"2019-02-28","img":"","permalink":"https://laplus3667.github.io/zh-tw/about/","series":null,"tags":null,"title":"About"},{"categories":null,"content":"","date":"0001-01-01","img":"","permalink":"https://laplus3667.github.io/zh-tw/contact/","series":null,"tags":null,"title":"Contact Us"},{"categories":null,"content":"","date":"0001-01-01","img":"","permalink":"https://laplus3667.github.io/zh-tw/faq/","series":null,"tags":null,"title":"FAQs"},{"categories":null,"content":"","date":"0001-01-01","img":"","permalink":"https://laplus3667.github.io/zh-tw/offline/","series":null,"tags":null,"title":"Offline"}]